// Code generated by Makefile. DO NOT EDIT.
// source: service.proto and service.swagger.json

package v1

var Swagger = []byte(`
{
  "swagger": "2.0",
  "info": {
    "title": "KubeKit Service",
    "version": "1.0",
    "contact": {
      "name": "KubeKit",
      "url": "https://kubekit.dev/",
      "email": "team@kubekit.dev"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cluster": {
      "get": {
        "operationId": "GetClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetClustersResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "names",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      },
      "post": {
        "operationId": "Init",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InitResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InitRequest"
            }
          }
        ],
        "tags": [
          "Kubekit"
        ]
      }
    },
    "/api/v1/cluster/{cluster_name}": {
      "get": {
        "operationId": "Describe",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DescribeResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_params",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      },
      "delete": {
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "destroy_all",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      },
      "post": {
        "operationId": "Apply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ApplyResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ApplyRequest"
            }
          }
        ],
        "tags": [
          "Kubekit"
        ]
      },
      "put": {
        "operationId": "UpdateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateClusterResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateClusterRequest"
            }
          }
        ],
        "tags": [
          "Kubekit"
        ]
      }
    },
    "/api/v1/cluster/{cluster_name}/config": {
      "delete": {
        "operationId": "DeleteClusterConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteClusterConfigResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      }
    },
    "/api/v1/cluster/{cluster_name}/token": {
      "get": {
        "operationId": "Token",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TokenResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VersionResponse"
            }
          },
          "400": {
            "description": "Returned when a request is invalid or missing parameters",
            "schema": {}
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "api",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Kubekit"
        ]
      }
    }
  },
  "definitions": {
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "` + "`" + `NullValue` + "`" + ` is a singleton enumeration to represent the null value for the\n` + "`" + `Value` + "`" + ` type union.\n\n The JSON representation for ` + "`" + `NullValue` + "`" + ` is JSON ` + "`" + `null` + "`" + `.\n\n - NULL_VALUE: Null value."
    },
    "v1ApplyAction": {
      "type": "string",
      "enum": [
        "ALL",
        "PROVISION",
        "CONFIGURE"
      ],
      "default": "ALL"
    },
    "v1ApplyRequest": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "cluster_name": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/v1ApplyAction"
        },
        "package_url": {
          "type": "string"
        },
        "force_package": {
          "type": "boolean",
          "format": "boolean"
        },
        "ca_certs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1ApplyResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1Cluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/v1PlatformName"
        },
        "nodes": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/v1Status"
        }
      }
    },
    "v1ClusterConfig": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ClusterNodes": {
      "type": "object",
      "properties": {
        "node_pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NodePool"
          }
        }
      }
    },
    "v1DeleteClusterConfigResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "cluster_name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/v1DeleteClusterConfigStatus"
        }
      }
    },
    "v1DeleteClusterConfigStatus": {
      "type": "string",
      "enum": [
        "DELETED",
        "NOT_FOUND"
      ],
      "default": "DELETED"
    },
    "v1DeleteResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "v1DescribeResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/v1Cluster"
        },
        "entrypoint": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/v1ClusterConfig"
        },
        "nodes": {
          "$ref": "#/definitions/v1ClusterNodes"
        },
        "kubeconfig": {
          "type": "string"
        }
      }
    },
    "v1GetClustersResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Cluster"
          }
        }
      }
    },
    "v1InitRequest": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "cluster_name": {
          "type": "string"
        },
        "platform": {
          "$ref": "#/definitions/v1PlatformName"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1InitResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1Node": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "pool_name": {
          "type": "string"
        },
        "role_name": {
          "type": "string"
        },
        "public_ip": {
          "type": "string"
        },
        "private_ip": {
          "type": "string"
        },
        "other_ips": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "public_dns": {
          "type": "string"
        },
        "private_dns": {
          "type": "string"
        },
        "other_dns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1NodePool": {
      "type": "object",
      "properties": {
        "pool_name": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Node"
          }
        }
      }
    },
    "v1PlatformName": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "EC2",
        "EKS",
        "AZURE",
        "AKS",
        "OPENSTACK",
        "VSPHERE",
        "VRA",
        "STACKI",
        "RAW"
      ],
      "default": "UNKNOWN"
    },
    "v1Status": {
      "type": "string",
      "enum": [
        "UNKNOWN_STATUS",
        "ABSENT",
        "CREATING",
        "PROVISIONED",
        "FAILED_PROVISIONING",
        "FAILED_CONFIGURATION",
        "CREATED",
        "FAILED_CREATION",
        "RUNNING",
        "STOPPED",
        "TERMINATING",
        "TERMINATED",
        "FAILED_TERMINATION"
      ],
      "default": "UNKNOWN_STATUS"
    },
    "v1TokenResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "spec": {
          "type": "object"
        },
        "status": {
          "$ref": "#/definitions/v1TokenStatus"
        }
      }
    },
    "v1TokenStatus": {
      "type": "object",
      "properties": {
        "expirationTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1UpdateClusterRequest": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "cluster_name": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1UpdateClusterResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        }
      }
    },
    "v1VersionResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string"
        },
        "kubekit": {
          "type": "string"
        },
        "kubernetes": {
          "type": "string"
        },
        "docker": {
          "type": "string"
        },
        "etcd": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "KubeKit Development - Slack",
    "url": "slack://channel?team=TQN0L5ZU1\u0026id=CQY6PKLDD"
  }
}
`)
