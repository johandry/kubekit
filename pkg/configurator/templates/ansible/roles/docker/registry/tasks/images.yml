- name: check if image is already loaded to local registry
  shell: |
    {% set image_repo_tag = image['src'].split(':') %}
    curl -s -o /dev/null -I -w "%{http_code}" \
      --cacert /etc/docker/certs.d/localhost\:{{registry_port}}/ca.crt \
      https://localhost:{{registry_port}}/v2/images/tdc/{{ image_repo_tag[:-1]|join(':') }}/manifests/{{ image_repo_tag[-1] }}
  register: is_image_loaded

- block:

    - name: check if image archive exists, if not download to the expected prebake path
      shell: >
        {% set repo = ([ image['src'].split(':')[0], '@', image['checksum_type'], ':', image['checksum'] ] | join('')) %}
        docker pull {{ repo }} && docker tag {{ repo }} tdc/{{ image['src'] }} &&
        mkdir -p {{ image['prebake-path'] | dirname }} &&
        docker save tdc/{{ image['src'] }} |
        xz -z > {{ image['prebake-path'] }}
      when: download_images_if_missing
      args:
        creates: "{{ image['prebake-path'] }}"

    - name: load images
      shell: >
        docker_load=$(docker load -i {{ image['prebake-path'] }})
        && (loaded=$(echo "$docker_load" | awk '{print $NF}')
        && [[ "$loaded" != "tdc/"* ]]
        && ([ $(echo "$loaded" | awk -F':' '{print $1}' | awk -F'/' '{print $1}' | grep '\.') ] && docker tag "$loaded" "tdc/$loaded" || docker tag "$loaded" "tdc/docker.io/$loaded")
        || echo "{{ image['prebake-path'] }} already loaded")

    - name: Retag images to localhost
      shell: "docker tag tdc/{{ image['src'] }} localhost:{{registry_port}}/tdc/{{ image['src'] }}"

    - name: Upload images to local repo
      shell: "docker push localhost:{{registry_port}}/tdc/{{ image['src'] }}"

  when: is_image_loaded.stdout != "200"
