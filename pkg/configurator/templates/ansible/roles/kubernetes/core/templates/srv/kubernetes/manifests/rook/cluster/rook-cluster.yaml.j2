#################################################################################################################
# Define the settings for the rook-ceph cluster with common settings for a production cluster.
# All nodes with available raw devices will be used for the Ceph cluster. At least three nodes are required
# in this example. See the documentation for more details on storage settings available.

# For example, to create the cluster:
#   kubectl create -f rook-common.yaml
#   kubectl create -f rook-operator.yaml
#   kubectl create -f rook-cluster.yaml
#################################################################################################################

apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: rook-ceph
  namespace: rook-ceph
spec:
  cephVersion:
    # The container image used to launch the Ceph daemon pods (mon, mgr, osd, mds, rgw).
    # v12 is luminous, v13 is mimic, and v14 is nautilus.
    # RECOMMENDATION: In production, use a specific version tag instead of the general v14 flag, which pulls the latest release and could result in different
    # versions running within the cluster. See tags available at https://hub.docker.com/r/ceph/ceph/tags/.
    image: {{ core_repo_root }}{{ current_manifest['dependencies']['core']['ceph']['src'] }}
    # Whether to allow unsupported versions of Ceph. Currently luminous, mimic and nautilus are supported, with the recommendation to upgrade to nautilus.
    # Do not set to true in production.
    allowUnsupported: false
  # The path on the host where configuration files will be persisted. Must be specified.
  # Important: if you reinstall the cluster, make sure you delete this directory from each host or else the mons will fail to start on the new cluster.
  # In Minikube, the '/data' directory is configured to persist across reboots. Use "/data/rook" in Minikube environment.
  dataDirHostPath: {{ rook_config_data_dir }}
  # set the amount of mons to be started
  mon:
    count: {{ rook_ceph_monitor_count }}
    allowMultiplePerNode: {{ rook_ceph_monitor_allow_multiple_per_node | bool }}
  # enable the ceph dashboard for viewing cluster status
  dashboard:
    enabled: {{ rook_dashboard_enabled | bool }}
    # serve the dashboard under a subpath (useful when you are accessing the dashboard via a reverse proxy)
    # urlPrefix: /ceph-dashboard
    # serve the dashboard at the given port.
    port: {{ rook_dashboard_port }}
    # serve the dashboard using SSL
    # ssl: true
  monitoring:
    enabled: {{ rook_monitoring_enabled | bool }}
    rulesNamespace: rook-ceph
  network:
    # toggle to use hostNetwork
    hostNetwork: {{ rook_ceph_use_host_network | bool }}
  rbdMirroring:
    # The number of daemons that will perform the rbd mirroring.
    # rbd mirroring must be configured with "rbd mirror" from the rook toolbox.
    workers: 0
  # To control where various services will be scheduled by kubernetes, use the placement configuration sections below.
  # The example under 'all' would have all services scheduled on kubernetes nodes labeled with 'role=storage-node' and
  # tolerate taints with a key of 'storage-node'.
  placement:
    all: {{ rook_ceph_placement_options_all }}
    mon: {{ rook_ceph_placement_options_mon }}
    osd: {{ rook_ceph_placement_options_osd }}
    mgr: {{ rook_ceph_placement_options_mgr }}
  annotations:
    all: {{ rook_ceph_annotation_options_all }}
    mon: {{ rook_ceph_annotation_options_mon }}
    osd: {{ rook_ceph_annotation_options_osd }}
    # If no mgr annotations are set, prometheus scrape annotations will be set by default.
    mgr: {{ rook_ceph_annotation_options_mgr }}
  resources:
    # The requests and limits set here, allow the mgr pod to use half of one CPU core and 1 gigabyte of memory
    mgr:
      limits:
        cpu: "{{ rook_ceph_mgr_resource_limits_cpu }}"
        memory: "{{ rook_ceph_mgr_resource_limits_mem }}"
      requests:
        cpu: "{{ rook_ceph_mgr_resource_requests_cpu }}"
        memory: "{{ rook_ceph_mgr_resource_requests_mem }}"
    mon:
      limits:
        cpu: "{{ rook_ceph_mon_resource_limits_cpu }}"
        memory: "{{ rook_ceph_mon_resource_limits_mem }}"
      requests:
        cpu: "{{ rook_ceph_mon_resource_requests_cpu }}"
        memory: "{{ rook_ceph_mon_resource_requests_mem }}"
    osd:
      limits:
        cpu: "{{ rook_ceph_osd_resource_limits_cpu }}"
        memory: "{{ rook_ceph_osd_resource_limits_mem }}"
      requests:
        cpu: "{{ rook_ceph_osd_resource_requests_cpu }}"
        memory: "{{ rook_ceph_osd_resource_requests_mem }}"
  storage: # cluster level storage configuration and selection
    useAllNodes: {{ rook_ceph_storage_use_all_nodes | bool }}
    useAllDevices: {{ rook_ceph_storage_use_all_devices | bool }}
    deviceFilter: "{{ rook_ceph_storage_device_filter }}"
    location: "{{ rook_ceph_storage_location }}"
    config:
      # The default and recommended storeType is dynamically set to bluestore for devices and filestore for directories.
      # Set the storeType explicitly only if it is required not to use the default.
      # storeType: bluestore
      # metadataDevice: "md0" # specify a non-rotational storage so ceph-volume will use it as block db device of bluestore.
      # databaseSizeMB: "1024" # uncomment if the disks are smaller than 100 GB
      # journalSizeMB: "1024"  # uncomment if the disks are 20 GB or smaller
      osdsPerDevice: "1" # this value can be overridden at the node or device level
      # encryptedDevice: "true" # the default value for this option is "false"
# Cluster level list of directories to use for filestore-based OSD storage. If uncommented, this example would create an OSD under the dataDirHostPath.
    directories:
{% for dir in rook_ceph_storage_directories %}
      - path: {{ dir }}
{% endfor %}
#    directories:
#    - path: /var/lib/rook
# Individual nodes and their config can be specified as well, but 'useAllNodes' above must be set to false. Then, only the named
# nodes below will be used as storage resources.  Each node's 'name' field should match their 'kubernetes.io/hostname' label.
#    nodes:
#    - name: "172.17.4.101"
#      directories: # specific directories to use for storage can be specified for each node
#      - path: "/rook/storage-dir"
#      resources:
#        limits:
#          cpu: "500m"
#          memory: "1024Mi"
#        requests:
#          cpu: "500m"
#          memory: "1024Mi"
#    - name: "172.17.4.201"
#      devices: # specific devices to use for storage can be specified for each node
#      - name: "sdb"
#      - name: "nvme01" # multiple osds can be created on high performance devices
#        config:
#          osdsPerDevice: "5"
#      config: # configuration can be specified at the node level which overrides the cluster level config
#        storeType: filestore
#    - name: "172.17.4.301"
#      deviceFilter: "^sd."