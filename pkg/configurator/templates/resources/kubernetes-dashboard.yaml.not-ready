---
apiVersion: v1
kind: List
items:

  - kind: Secret
    apiVersion: v1
    metadata:
      labels:
        app: kubernetes-dashboard
      name: kubernetes-dashboard-certs
      namespace: kube-system
    type: Opaque

  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      labels:
        app: kubernetes-dashboard
      name: kubernetes-dashboard-sa
      namespace: kube-system

  - kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: kubernetes-dashboard-minimal
      namespace: kube-system
    rules:
        # Allow Dashboard to create 'kubernetes-dashboard-key-holder' secret.
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: ["create"]
        # Allow Dashboard to create 'kubernetes-dashboard-settings' config map.
      - apiGroups: [""]
        resources: ["configmaps"]
        verbs: ["create"]
        # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
      - apiGroups: [""]
        resources: ["secrets"]
        resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs"]
        verbs: ["get", "update", "delete"]
        # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
      - apiGroups: [""]
        resources: ["configmaps"]
        resourceNames: ["kubernetes-dashboard-settings"]
        verbs: ["get", "update"]
        # Allow Dashboard to get metrics from heapster.
      - apiGroups: [""]
        resources: ["services"]
        resourceNames: ["heapster"]
        verbs: ["proxy"]
      - apiGroups: [""]
        resources: ["services/proxy"]
        resourceNames: ["heapster", "http:heapster:", "https:heapster:"]
        verbs: ["get"]

  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: kubernetes-dashboard-minimal
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kubernetes-dashboard-minimal
    subjects:
      - kind: ServiceAccount
        name: kubernetes-dashboard-sa
        namespace: kube-system

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      labels:
        app: kubernetes-dashboard
      name: kubernetes-dashboard
      namespace: kube-system
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: kubernetes-dashboard
      template:
        metadata:
          labels:
            role: frontend
            app: kubernetes-dashboard
        spec:
          containers:
            - name: kubernetes-dashboard
              # temp fix waiting for kubeOS with new dashboard image
              image: "{{ core_repo_root }}{{ current_manifest['dependencies']['core']['kubernetes-dashboard']['src'] }}"
              resources:
                requests:
                  cpu: {{ kubernetes_dashboard_requests_cpu }}
                  memory: {{ kubernetes_dashboard_requests_memory }}
{% if kubernetes_dashboard_limits_cpu or kubernetes_dashboard_limits_memory %}
                limits:
{% if kubernetes_dashboard_limits_cpu %}
                  cpu: {{ kubernetes_dashboard_limits_cpu }}
{% endif %}
{% if kubernetes_dashboard_limits_memory %}
                  memory: {{ kubernetes_dashboard_limits_memory }}
{% endif %}
{% endif %}
              ports:
                - containerPort: 8443
                  protocol: TCP
              args:
                - --auto-generate-certificates
                # Uncomment the following line to manually specify Kubernetes API server Host
                # If not specified, Dashboard will attempt to auto discover the API server and connect
                # to it. Uncomment only if the default does not work.
                # - --apiserver-host=http://my-address:port
                - --heapster-host=http://heapster.kube-system.svc.cluster.local
              volumeMounts:
                - name: kubernetes-dashboard-certs
                  mountPath: /certs
                  # Create on-disk volume to store exec logs
                - mountPath: /tmp
                  name: tmp-volume
              livenessProbe:
                httpGet:
                  scheme: HTTPS
                  path: /
                  port: 8443
                initialDelaySeconds: 30
                timeoutSeconds: 30
          volumes:
            - name: kubernetes-dashboard-certs
              secret:
                secretName: kubernetes-dashboard-certs
            - name: tmp-volume
              emptyDir: {}
          serviceAccountName: kubernetes-dashboard-sa
          priorityClassName: kube-system-high
          # Comment the following tolerations if Dashboard must not be deployed on master
          tolerations:
            - key: node-role.kubernetes.io/master
              effect: NoSchedule

  - kind: Service
    apiVersion: v1
    metadata:
      labels:
        app: kubernetes-dashboard
      name: kubernetes-dashboard
      namespace: kube-system
    spec:
      ports:
        - port: 443
          targetPort: 8443
      selector:
        app: kubernetes-dashboard
