---
apiVersion: v1
kind: Pod
metadata:
  name: kube-scheduler
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
    prometheus.io/port: "10251"
    prometheus.io/scrape: "true"
  labels:
    component: kube-scheduler
    tier: control-plane
spec:
  hostNetwork: true
  #dnsPolicy: ClusterFirstWithHostNet
  priorityClassName: system-cluster-critical
  containers:
  - name: kube-scheduler
    image: {{ core_repo_root }}{{ current_manifest['dependencies']['control-plane']['kube-scheduler']['src'] }}
    imagePullPolicy: IfNotPresent
    command:
{% if current_manifest['dependencies']['control-plane']['kube-scheduler']['src'].split('/')[-1].startswith('hyperkube') %}
    - /hyperkube
    - scheduler
{% else %}
    - kube-scheduler
{% endif %}
    - --config=/etc/kubernetes/configs/scheduler.conf
{% for item in kube_scheduler_args %}
    - {{ item }}
{% endfor %}
    #ports:
    #- containerPort: 10251
    #  hostPort: 10251
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10251
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
    volumeMounts:
    - mountPath: {{ cert_dir }}
      name: kube-controller-certs
      readOnly: true
    - mountPath: {{ kube_config_filename }}
      name: kubeconfig
      readOnly: true
    - mountPath: {{ kube_folder }}
      name: etc-kubernetes
      readOnly: true
    - mountPath: /etc/kubernetes/configs/scheduler.conf
      name: scheduler-conf
      readOnly: true
  volumes:
  - hostPath:
      path: {{ cert_dir }}
      type: Directory
    name: kube-controller-certs
  - hostPath:
      path: {{ kube_config_filename }}
      type: File
    name: kubeconfig
  - hostPath:
      path: {{ kube_folder }}
      type: Directory
    name: etc-kubernetes
  - hostPath:
      path: /etc/kubernetes/configs/scheduler.conf
      type: File
    name: scheduler-conf
