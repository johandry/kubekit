---
apiVersion: v1
kind: List
items:

  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
      name: kube-state-metrics
      namespace: kube-system

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
      name: kube-state-metrics
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
          - nodes
          - pods
          - services
          - resourcequotas
          - replicationcontrollers
          - limitranges
          - persistentvolumeclaims
          - persistentvolumes
          - namespaces
          - endpoints
        verbs:
          - list
          - watch
      - apiGroups:
          - extensions
        resources:
          - daemonsets
          - deployments
          - replicasets
          - ingresses
        verbs:
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - statefulsets
          - daemonsets
          - deployments
          - replicasets
        verbs:
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - cronjobs
          - jobs
        verbs:
          - list
          - watch
      - apiGroups:
          - autoscaling
        resources:
          - horizontalpodautoscalers
        verbs:
          - list
          - watch
      - apiGroups:
          - authentication.k8s.io
        resources:
          - tokenreviews
        verbs:
          - create
      - apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews
        verbs:
          - create
      - apiGroups:
          - policy
        resources:
          - poddisruptionbudgets
        verbs:
          - list
          - watch
      - apiGroups:
          - certificates.k8s.io
        resources:
          - certificatesigningrequests
        verbs:
          - list
          - watch
      - apiGroups:
          - storage.k8s.io
        resources:
          - storageclasses
          - volumeattachments
        verbs:
          - list
          - watch
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - mutatingwebhookconfigurations
          - validatingwebhookconfigurations
        verbs:
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - networkpolicies
        verbs:
          - list
          - watch

  - apiVersion: rbac.authorization.k8s.io/v1
    # kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      namespace: kube-system
      name: kube-state-metrics-resizer
    rules:
      - apiGroups: [""]
        resources:
          - pods
        verbs: ["get"]
      - apiGroups: ["extensions"]
        resources:
          - deployments
        resourceNames: ["kube-state-metrics"]
        verbs: ["get", "update"]

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: kube-state-metrics
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: kube-state-metrics-resizer
    subjects:
      - kind: ServiceAccount
        name: kube-state-metrics
        namespace: kube-system

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
      name: kube-state-metrics
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: kube-state-metrics
    subjects:
      - kind: ServiceAccount
        name: kube-state-metrics
        namespace: kube-system

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: kube-state-metrics
      namespace: kube-system
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app: kube-state-metrics
        role: frontend
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/name: kube-state-metrics
      template:
        metadata:
          labels:
            app.kubernetes.io/name: kube-state-metrics
            app: kube-state-metrics
            role: frontend
        spec:
          serviceAccountName: kube-state-metrics
          nodeSelector:
            kubernetes.io/os: linux
          containers:
            - name: kube-state-metrics
              image: quay.io/coreos/kube-state-metrics:v1.8.0
              env:
              - name: GOMAXPROCS
                valueFrom:
                  resourceFieldRef:
                    resource: limits.cpu
              ports:
                - name: http-metrics
                  containerPort: 8080
                - name: telemetry
                  containerPort: 8081
              livenessProbe:
                httpGet:
                  path: /healthz
                  port: 8080
                initialDelaySeconds: 5
                timeoutSeconds: 5
              readinessProbe:
                httpGet:
                  path: /
                  port: 8081
                initialDelaySeconds: 5
                timeoutSeconds: 5
              resources:
                # keep request = limit to keep this container in guaranteed class
                requests:
                  cpu: 100m
                  memory: 300Mi
                limits:
                  cpu: 100m
                  memory: 300Mi
            - name: addon-resizer
              image: gcr.io/google_containers/addon-resizer:1.8.3
              resources:
                requests:
                  cpu: 150m
                  memory: 50Mi
                limits:
                  cpu: 150m
                  memory: 50Mi
              env:
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /pod_nanny
                - --container=kube-state-metrics
                - --cpu=100m
                - --extra-cpu=1m
                - --memory=100Mi
                - --extra-memory=2Mi
                - --threshold=5
                - --deployment=kube-state-metrics

  - apiVersion: v1
    kind: Service
    metadata:
      name: kube-state-metrics
      namespace: kube-system
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app: kube-state-metrics
    spec:
      ports:
      - name: http-metrics
        port: 8080
        targetPort: http-metrics
      - name: telemetry
        port: 8081
        targetPort: telemetry
      selector:
        app.kubernetes.io/name: kube-state-metrics
