---
apiVersion: v1
kind: List
items:

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      namespace: kube-system
      name: heapster-policy
    spec:
      podSelector:
        matchLabels:
          app: heapster
      ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              heapster: ingress
        - podSelector:
            matchLabels:
              app: heapster
        - podSelector:
            matchLabels:
              heapster-metrics: enabled
        - podSelector:
            matchLabels:
              app: kubernetes-dashboard

  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: heapster-sa
      namespace: kube-system

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: heapster-crb
      labels:
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: heapster-cr
    subjects:
    - kind: ServiceAccount
      name: heapster-sa
      namespace: kube-system

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: heapster-cr
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      - nodes
      - pods
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - nodes/stats
      verbs:
      - create
      - get

    # Heapster's pod_nanny monitors the heapster deployment & its pod(s), and scales
    # the resources of the deployment if necessary.
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: system:pod-nanny-role
      namespace: kube-system
      labels:
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
    rules:
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
    - apiGroups:
      - "extensions"
      resources:
      - deployments
      verbs:
      - get
      - update

  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: heapster-rb
      namespace: kube-system
      labels:
        kubernetes.io/cluster-service: "true"
        addonmanager.kubernetes.io/mode: Reconcile
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: system:pod-nanny-role
    subjects:
    - kind: ServiceAccount
      name: heapster-sa
      namespace: kube-system

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: heapster
      namespace: kube-system
      labels:
        app: heapster
        role: frontend
        kubernetes.io/cluster-service: "true"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: heapster
      template:
        metadata:
          labels:
            app: heapster
            role: frontend
          annotations:
            scheduler.alpha.kubernetes.io/critical-pod: ''
        spec:
          serviceAccountName: heapster-sa
          priorityClassName: kube-system-high
          tolerations:
            # Mark the pod as a critical add-on for rescheduling.
            - key: "CriticalAddonsOnly"
              operator: "Exists"
          containers:
            - image: {{ .heapsterImageSrc }}
              name: heapster
              resources:
                # keep request = limit to keep this container in guaranteed class
                # heapster limits provided by: https://github.com/kubernetes/kubernetes/issues/10256
                requests:
                  cpu: 150m
                  memory: 600Mi
                limits:
                  cpu: "150m"
                  memory: 600Mi
              command:
                - /heapster
                - --source=kubernetes.summary_api:https://kubernetes.default?useServiceAccount=true&kubeletHttps=true&kubeletPort=10250&insecure=true
                - --heapster-port=8082
                - --metric-resolution=60s
              ports:
              - containerPort: 8082
                protocol: TCP
                name: summary
            # needed to acess disk io metrics since it uses the legacy source
            # heapster only supports one source at a time, so we need to create another container
            - image: {{ .heapsterImageSrc }}
              name: heapster-legacy
              resources:
                # keep request = limit to keep this container in guaranteed class
                # heapster limits provided by: https://github.com/kubernetes/kubernetes/issues/10256
                requests:
                  cpu: 200m
                  memory: 900Mi
                limits:
                  cpu: 200m
                  memory: 900Mi
              command:
                - /heapster
                - --source=kubernetes:https://kubernetes.default?useServiceAccount=true&kubeletHttps=true&kubeletPort=10250&insecure=true
                - --heapster-port=8083
                - --metric-resolution=60s
              ports:
              - containerPort: 8083
                protocol: TCP
                name: legacy
            - image: {{ .addonResizerImageSrc }}
              name: heapster-nanny
              resources:
                requests:
                  cpu: 50m
                  memory: {{ .heapsterNannyMemory }}
                limits:
                  cpu: 50m
                  memory: {{ .heapsterNannyMemory }}
              env:
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /pod_nanny
                - --cpu=150m
                - --extra-cpu=0.5m
                - --memory=600Mi
                - --extra-memory=4Mi
                - --threshold=5
                - --deployment=heapster
                - --container=heapster
                - --poll-period=300000
            # for legacy source
            - image: {{ .addonResizerImageSrc }}
              name: heapster-nanny-legacy
              resources:
                requests:
                  cpu: 100m
                  memory: {{ .heapsterNannyMemory }}
                limits:
                  cpu: 100m
                  memory: {{ .heapsterNannyMemory }}
              env:
                - name: MY_POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: MY_POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              command:
                - /pod_nanny
                - --cpu=200m
                - --extra-cpu=1m
                - --memory=900Mi
                - --extra-memory=8Mi
                - --threshold=5
                - --deployment=heapster
                - --container=heapster-legacy
                - --poll-period=300000

  - kind: Service
    apiVersion: v1
    metadata:
      name: heapster
      namespace: kube-system
      labels:
        kubernetes.io/cluster-service: "true"
        kubernetes.io/name: "Heapster"
    spec:
      ports:
        - port: 80
          targetPort: 8082
          name: summary
        - port: 8083
          targetPort: 8083
          name: legacy
      selector:
        app: heapster
